//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/julia/RiderProjects/Rcl/Rcl.Compiler\RaccoonLang.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="RaccoonLangParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IRaccoonLangListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompilationUnit([NotNull] RaccoonLangParser.CompilationUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompilationUnit([NotNull] RaccoonLangParser.CompilationUnitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportStatement([NotNull] RaccoonLangParser.ImportStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportStatement([NotNull] RaccoonLangParser.ImportStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.namespaceImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespaceImport([NotNull] RaccoonLangParser.NamespaceImportContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.namespaceImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespaceImport([NotNull] RaccoonLangParser.NamespaceImportContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.aliasImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAliasImport([NotNull] RaccoonLangParser.AliasImportContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.aliasImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAliasImport([NotNull] RaccoonLangParser.AliasImportContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.groupImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupImport([NotNull] RaccoonLangParser.GroupImportContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.groupImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupImport([NotNull] RaccoonLangParser.GroupImportContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.groupImportItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupImportItem([NotNull] RaccoonLangParser.GroupImportItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.groupImportItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupImportItem([NotNull] RaccoonLangParser.GroupImportItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.groupImportItemList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupImportItemList([NotNull] RaccoonLangParser.GroupImportItemListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.groupImportItemList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupImportItemList([NotNull] RaccoonLangParser.GroupImportItemListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamespace([NotNull] RaccoonLangParser.NamespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamespace([NotNull] RaccoonLangParser.NamespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.typeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeDeclaration([NotNull] RaccoonLangParser.TypeDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.typeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeDeclaration([NotNull] RaccoonLangParser.TypeDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDeclaration([NotNull] RaccoonLangParser.FunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDeclaration([NotNull] RaccoonLangParser.FunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameters([NotNull] RaccoonLangParser.ParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameters([NotNull] RaccoonLangParser.ParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] RaccoonLangParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] RaccoonLangParser.ParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionBody([NotNull] RaccoonLangParser.FunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionBody([NotNull] RaccoonLangParser.FunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.functionBlockBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionBlockBody([NotNull] RaccoonLangParser.FunctionBlockBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.functionBlockBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionBlockBody([NotNull] RaccoonLangParser.FunctionBlockBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.functionLambdaBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionLambdaBody([NotNull] RaccoonLangParser.FunctionLambdaBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.functionLambdaBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionLambdaBody([NotNull] RaccoonLangParser.FunctionLambdaBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceDeclaration([NotNull] RaccoonLangParser.InterfaceDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceDeclaration([NotNull] RaccoonLangParser.InterfaceDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceParents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceParents([NotNull] RaccoonLangParser.InterfaceParentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceParents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceParents([NotNull] RaccoonLangParser.InterfaceParentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceBody([NotNull] RaccoonLangParser.InterfaceBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceBody([NotNull] RaccoonLangParser.InterfaceBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceMember([NotNull] RaccoonLangParser.InterfaceMemberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceMember([NotNull] RaccoonLangParser.InterfaceMemberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceMethodOrFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceMethodOrFunction([NotNull] RaccoonLangParser.InterfaceMethodOrFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceMethodOrFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceMethodOrFunction([NotNull] RaccoonLangParser.InterfaceMethodOrFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceMethodParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceMethodParameters([NotNull] RaccoonLangParser.InterfaceMethodParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceMethodParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceMethodParameters([NotNull] RaccoonLangParser.InterfaceMethodParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaceProperty([NotNull] RaccoonLangParser.InterfacePropertyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaceProperty([NotNull] RaccoonLangParser.InterfacePropertyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfacePropertyAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfacePropertyAccessors([NotNull] RaccoonLangParser.InterfacePropertyAccessorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfacePropertyAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfacePropertyAccessors([NotNull] RaccoonLangParser.InterfacePropertyAccessorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.getAndSetAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetAndSetAccessors([NotNull] RaccoonLangParser.GetAndSetAccessorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.getAndSetAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetAndSetAccessors([NotNull] RaccoonLangParser.GetAndSetAccessorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.getOnlyAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetOnlyAccessor([NotNull] RaccoonLangParser.GetOnlyAccessorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.getOnlyAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetOnlyAccessor([NotNull] RaccoonLangParser.GetOnlyAccessorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.setOnlyAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetOnlyAccessor([NotNull] RaccoonLangParser.SetOnlyAccessorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.setOnlyAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetOnlyAccessor([NotNull] RaccoonLangParser.SetOnlyAccessorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.autoAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAutoAccessors([NotNull] RaccoonLangParser.AutoAccessorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.autoAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAutoAccessors([NotNull] RaccoonLangParser.AutoAccessorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDeclaration([NotNull] RaccoonLangParser.ClassDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDeclaration([NotNull] RaccoonLangParser.ClassDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classParents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassParents([NotNull] RaccoonLangParser.ClassParentsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classParents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassParents([NotNull] RaccoonLangParser.ClassParentsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaces"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterfaces([NotNull] RaccoonLangParser.InterfacesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaces"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterfaces([NotNull] RaccoonLangParser.InterfacesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.baseClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBaseClass([NotNull] RaccoonLangParser.BaseClassContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.baseClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBaseClass([NotNull] RaccoonLangParser.BaseClassContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBody([NotNull] RaccoonLangParser.ClassBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBody([NotNull] RaccoonLangParser.ClassBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassMember([NotNull] RaccoonLangParser.ClassMemberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassMember([NotNull] RaccoonLangParser.ClassMemberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.ctor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtor([NotNull] RaccoonLangParser.CtorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.ctor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtor([NotNull] RaccoonLangParser.CtorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.ctorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtorBody([NotNull] RaccoonLangParser.CtorBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.ctorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtorBody([NotNull] RaccoonLangParser.CtorBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.shortCtorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShortCtorBody([NotNull] RaccoonLangParser.ShortCtorBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.shortCtorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShortCtorBody([NotNull] RaccoonLangParser.ShortCtorBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.longCtorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLongCtorBody([NotNull] RaccoonLangParser.LongCtorBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.longCtorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLongCtorBody([NotNull] RaccoonLangParser.LongCtorBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.otherCtorCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOtherCtorCall([NotNull] RaccoonLangParser.OtherCtorCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.otherCtorCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOtherCtorCall([NotNull] RaccoonLangParser.OtherCtorCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassProperty([NotNull] RaccoonLangParser.ClassPropertyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassProperty([NotNull] RaccoonLangParser.ClassPropertyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInitializer([NotNull] RaccoonLangParser.InitializerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInitializer([NotNull] RaccoonLangParser.InitializerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classPropertyAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassPropertyAccessors([NotNull] RaccoonLangParser.ClassPropertyAccessorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classPropertyAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassPropertyAccessors([NotNull] RaccoonLangParser.ClassPropertyAccessorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classPropertyFullAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassPropertyFullAccessors([NotNull] RaccoonLangParser.ClassPropertyFullAccessorsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classPropertyFullAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassPropertyFullAccessors([NotNull] RaccoonLangParser.ClassPropertyFullAccessorsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.fullGetAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFullGetAccessor([NotNull] RaccoonLangParser.FullGetAccessorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.fullGetAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFullGetAccessor([NotNull] RaccoonLangParser.FullGetAccessorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.fullSetAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFullSetAccessor([NotNull] RaccoonLangParser.FullSetAccessorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.fullSetAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFullSetAccessor([NotNull] RaccoonLangParser.FullSetAccessorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.accessorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccessorBody([NotNull] RaccoonLangParser.AccessorBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.accessorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccessorBody([NotNull] RaccoonLangParser.AccessorBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classMethodOrFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassMethodOrFunction([NotNull] RaccoonLangParser.ClassMethodOrFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classMethodOrFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassMethodOrFunction([NotNull] RaccoonLangParser.ClassMethodOrFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.dataClassDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataClassDeclaration([NotNull] RaccoonLangParser.DataClassDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.dataClassDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataClassDeclaration([NotNull] RaccoonLangParser.DataClassDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.dataClassBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataClassBody([NotNull] RaccoonLangParser.DataClassBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.dataClassBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataClassBody([NotNull] RaccoonLangParser.DataClassBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.fqtn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFqtn([NotNull] RaccoonLangParser.FqtnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.fqtn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFqtn([NotNull] RaccoonLangParser.FqtnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.fqtnPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFqtnPart([NotNull] RaccoonLangParser.FqtnPartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.fqtnPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFqtnPart([NotNull] RaccoonLangParser.FqtnPartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.fqtnGenericPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFqtnGenericPart([NotNull] RaccoonLangParser.FqtnGenericPartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.fqtnGenericPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFqtnGenericPart([NotNull] RaccoonLangParser.FqtnGenericPartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeName([NotNull] RaccoonLangParser.TypeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeName([NotNull] RaccoonLangParser.TypeNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.genericPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericPart([NotNull] RaccoonLangParser.GenericPartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.genericPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericPart([NotNull] RaccoonLangParser.GenericPartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] RaccoonLangParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] RaccoonLangParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] RaccoonLangParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] RaccoonLangParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.mutChangeStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMutChangeStatement([NotNull] RaccoonLangParser.MutChangeStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.mutChangeStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMutChangeStatement([NotNull] RaccoonLangParser.MutChangeStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.varialeDeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarialeDeclarationStatement([NotNull] RaccoonLangParser.VarialeDeclarationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.varialeDeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarialeDeclarationStatement([NotNull] RaccoonLangParser.VarialeDeclarationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.varialeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarialeDeclaration([NotNull] RaccoonLangParser.VarialeDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.varialeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarialeDeclaration([NotNull] RaccoonLangParser.VarialeDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopStatement([NotNull] RaccoonLangParser.LoopStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopStatement([NotNull] RaccoonLangParser.LoopStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.whileLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileLoop([NotNull] RaccoonLangParser.WhileLoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.whileLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileLoop([NotNull] RaccoonLangParser.WhileLoopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.foreachLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeachLoop([NotNull] RaccoonLangParser.ForeachLoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.foreachLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeachLoop([NotNull] RaccoonLangParser.ForeachLoopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.forLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForLoop([NotNull] RaccoonLangParser.ForLoopContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.forLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForLoop([NotNull] RaccoonLangParser.ForLoopContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionStatement([NotNull] RaccoonLangParser.ExpressionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionStatement([NotNull] RaccoonLangParser.ExpressionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] RaccoonLangParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] RaccoonLangParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.nullCoalescingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullCoalescingExpression([NotNull] RaccoonLangParser.NullCoalescingExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.nullCoalescingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullCoalescingExpression([NotNull] RaccoonLangParser.NullCoalescingExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.condOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondOrExpression([NotNull] RaccoonLangParser.CondOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.condOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondOrExpression([NotNull] RaccoonLangParser.CondOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.condAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCondAndExpression([NotNull] RaccoonLangParser.CondAndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.condAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCondAndExpression([NotNull] RaccoonLangParser.CondAndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.boolOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolOrExpression([NotNull] RaccoonLangParser.BoolOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.boolOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolOrExpression([NotNull] RaccoonLangParser.BoolOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.boolXorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolXorExpression([NotNull] RaccoonLangParser.BoolXorExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.boolXorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolXorExpression([NotNull] RaccoonLangParser.BoolXorExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.boolAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolAndExpression([NotNull] RaccoonLangParser.BoolAndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.boolAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolAndExpression([NotNull] RaccoonLangParser.BoolAndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpression([NotNull] RaccoonLangParser.EqualityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpression([NotNull] RaccoonLangParser.EqualityExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpression([NotNull] RaccoonLangParser.RelationalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpression([NotNull] RaccoonLangParser.RelationalExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.shiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShiftExpression([NotNull] RaccoonLangParser.ShiftExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.shiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShiftExpression([NotNull] RaccoonLangParser.ShiftExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpression([NotNull] RaccoonLangParser.AdditiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpression([NotNull] RaccoonLangParser.AdditiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpression([NotNull] RaccoonLangParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpression([NotNull] RaccoonLangParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.rangeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRangeExpression([NotNull] RaccoonLangParser.RangeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.rangeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRangeExpression([NotNull] RaccoonLangParser.RangeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpression([NotNull] RaccoonLangParser.UnaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpression([NotNull] RaccoonLangParser.UnaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.accessorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccessorExpression([NotNull] RaccoonLangParser.AccessorExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.accessorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccessorExpression([NotNull] RaccoonLangParser.AccessorExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.indexerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexerExpression([NotNull] RaccoonLangParser.IndexerExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.indexerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexerExpression([NotNull] RaccoonLangParser.IndexerExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTerm([NotNull] RaccoonLangParser.TermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTerm([NotNull] RaccoonLangParser.TermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.methodCallExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodCallExpression([NotNull] RaccoonLangParser.MethodCallExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.methodCallExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodCallExpression([NotNull] RaccoonLangParser.MethodCallExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.postExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPostExpression([NotNull] RaccoonLangParser.PostExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.postExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPostExpression([NotNull] RaccoonLangParser.PostExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.parExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParExpression([NotNull] RaccoonLangParser.ParExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.parExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParExpression([NotNull] RaccoonLangParser.ParExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.ifExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfExpression([NotNull] RaccoonLangParser.IfExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.ifExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfExpression([NotNull] RaccoonLangParser.IfExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.elifPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElifPart([NotNull] RaccoonLangParser.ElifPartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.elifPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElifPart([NotNull] RaccoonLangParser.ElifPartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.elsePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElsePart([NotNull] RaccoonLangParser.ElsePartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.elsePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElsePart([NotNull] RaccoonLangParser.ElsePartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.newExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewExpression([NotNull] RaccoonLangParser.NewExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.newExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewExpression([NotNull] RaccoonLangParser.NewExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] RaccoonLangParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] RaccoonLangParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.blockExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockExpression([NotNull] RaccoonLangParser.BlockExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.blockExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockExpression([NotNull] RaccoonLangParser.BlockExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] RaccoonLangParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] RaccoonLangParser.ExpressionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.identifierListComma"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierListComma([NotNull] RaccoonLangParser.IdentifierListCommaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.identifierListComma"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierListComma([NotNull] RaccoonLangParser.IdentifierListCommaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.identifierListDot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierListDot([NotNull] RaccoonLangParser.IdentifierListDotContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.identifierListDot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierListDot([NotNull] RaccoonLangParser.IdentifierListDotContext context);
}
