//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/julia/RiderProjects/Rcl/Rcl.Compiler\RaccoonLang.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IRaccoonLangListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class RaccoonLangBaseListener : IRaccoonLangListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompilationUnit([NotNull] RaccoonLangParser.CompilationUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.compilationUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompilationUnit([NotNull] RaccoonLangParser.CompilationUnitContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImportStatement([NotNull] RaccoonLangParser.ImportStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.importStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImportStatement([NotNull] RaccoonLangParser.ImportStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.namespaceImport"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespaceImport([NotNull] RaccoonLangParser.NamespaceImportContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.namespaceImport"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespaceImport([NotNull] RaccoonLangParser.NamespaceImportContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.aliasImport"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAliasImport([NotNull] RaccoonLangParser.AliasImportContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.aliasImport"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAliasImport([NotNull] RaccoonLangParser.AliasImportContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.groupImport"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroupImport([NotNull] RaccoonLangParser.GroupImportContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.groupImport"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroupImport([NotNull] RaccoonLangParser.GroupImportContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.groupImportItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroupImportItem([NotNull] RaccoonLangParser.GroupImportItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.groupImportItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroupImportItem([NotNull] RaccoonLangParser.GroupImportItemContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.groupImportItemList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroupImportItemList([NotNull] RaccoonLangParser.GroupImportItemListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.groupImportItemList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroupImportItemList([NotNull] RaccoonLangParser.GroupImportItemListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace([NotNull] RaccoonLangParser.NamespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace([NotNull] RaccoonLangParser.NamespaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.typeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeDeclaration([NotNull] RaccoonLangParser.TypeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.typeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeDeclaration([NotNull] RaccoonLangParser.TypeDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclaration([NotNull] RaccoonLangParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclaration([NotNull] RaccoonLangParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameters([NotNull] RaccoonLangParser.ParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameters([NotNull] RaccoonLangParser.ParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] RaccoonLangParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] RaccoonLangParser.ParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionBody([NotNull] RaccoonLangParser.FunctionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionBody([NotNull] RaccoonLangParser.FunctionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.functionBlockBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionBlockBody([NotNull] RaccoonLangParser.FunctionBlockBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.functionBlockBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionBlockBody([NotNull] RaccoonLangParser.FunctionBlockBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.functionLambdaBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionLambdaBody([NotNull] RaccoonLangParser.FunctionLambdaBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.functionLambdaBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionLambdaBody([NotNull] RaccoonLangParser.FunctionLambdaBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceDeclaration([NotNull] RaccoonLangParser.InterfaceDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceDeclaration([NotNull] RaccoonLangParser.InterfaceDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceParents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceParents([NotNull] RaccoonLangParser.InterfaceParentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceParents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceParents([NotNull] RaccoonLangParser.InterfaceParentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceBody([NotNull] RaccoonLangParser.InterfaceBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceBody([NotNull] RaccoonLangParser.InterfaceBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceMember([NotNull] RaccoonLangParser.InterfaceMemberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceMember([NotNull] RaccoonLangParser.InterfaceMemberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceMethodOrFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceMethodOrFunction([NotNull] RaccoonLangParser.InterfaceMethodOrFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceMethodOrFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceMethodOrFunction([NotNull] RaccoonLangParser.InterfaceMethodOrFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceMethodParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceMethodParameters([NotNull] RaccoonLangParser.InterfaceMethodParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceMethodParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceMethodParameters([NotNull] RaccoonLangParser.InterfaceMethodParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaceProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaceProperty([NotNull] RaccoonLangParser.InterfacePropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaceProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaceProperty([NotNull] RaccoonLangParser.InterfacePropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfacePropertyAccessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfacePropertyAccessors([NotNull] RaccoonLangParser.InterfacePropertyAccessorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfacePropertyAccessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfacePropertyAccessors([NotNull] RaccoonLangParser.InterfacePropertyAccessorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.getAndSetAccessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetAndSetAccessors([NotNull] RaccoonLangParser.GetAndSetAccessorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.getAndSetAccessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetAndSetAccessors([NotNull] RaccoonLangParser.GetAndSetAccessorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.getOnlyAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetOnlyAccessor([NotNull] RaccoonLangParser.GetOnlyAccessorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.getOnlyAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetOnlyAccessor([NotNull] RaccoonLangParser.GetOnlyAccessorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.setOnlyAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetOnlyAccessor([NotNull] RaccoonLangParser.SetOnlyAccessorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.setOnlyAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetOnlyAccessor([NotNull] RaccoonLangParser.SetOnlyAccessorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.autoAccessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAutoAccessors([NotNull] RaccoonLangParser.AutoAccessorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.autoAccessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAutoAccessors([NotNull] RaccoonLangParser.AutoAccessorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDeclaration([NotNull] RaccoonLangParser.ClassDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDeclaration([NotNull] RaccoonLangParser.ClassDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classParents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassParents([NotNull] RaccoonLangParser.ClassParentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classParents"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassParents([NotNull] RaccoonLangParser.ClassParentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.interfaces"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterfaces([NotNull] RaccoonLangParser.InterfacesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.interfaces"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterfaces([NotNull] RaccoonLangParser.InterfacesContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.baseClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseClass([NotNull] RaccoonLangParser.BaseClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.baseClass"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseClass([NotNull] RaccoonLangParser.BaseClassContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassBody([NotNull] RaccoonLangParser.ClassBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassBody([NotNull] RaccoonLangParser.ClassBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassMember([NotNull] RaccoonLangParser.ClassMemberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassMember([NotNull] RaccoonLangParser.ClassMemberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.ctor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCtor([NotNull] RaccoonLangParser.CtorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.ctor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCtor([NotNull] RaccoonLangParser.CtorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.ctorBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCtorBody([NotNull] RaccoonLangParser.CtorBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.ctorBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCtorBody([NotNull] RaccoonLangParser.CtorBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.shortCtorBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShortCtorBody([NotNull] RaccoonLangParser.ShortCtorBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.shortCtorBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShortCtorBody([NotNull] RaccoonLangParser.ShortCtorBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.longCtorBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLongCtorBody([NotNull] RaccoonLangParser.LongCtorBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.longCtorBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLongCtorBody([NotNull] RaccoonLangParser.LongCtorBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.otherCtorCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOtherCtorCall([NotNull] RaccoonLangParser.OtherCtorCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.otherCtorCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOtherCtorCall([NotNull] RaccoonLangParser.OtherCtorCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassProperty([NotNull] RaccoonLangParser.ClassPropertyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classProperty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassProperty([NotNull] RaccoonLangParser.ClassPropertyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInitializer([NotNull] RaccoonLangParser.InitializerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.initializer"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInitializer([NotNull] RaccoonLangParser.InitializerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classPropertyAccessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassPropertyAccessors([NotNull] RaccoonLangParser.ClassPropertyAccessorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classPropertyAccessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassPropertyAccessors([NotNull] RaccoonLangParser.ClassPropertyAccessorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classPropertyFullAccessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassPropertyFullAccessors([NotNull] RaccoonLangParser.ClassPropertyFullAccessorsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classPropertyFullAccessors"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassPropertyFullAccessors([NotNull] RaccoonLangParser.ClassPropertyFullAccessorsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.fullGetAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFullGetAccessor([NotNull] RaccoonLangParser.FullGetAccessorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.fullGetAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFullGetAccessor([NotNull] RaccoonLangParser.FullGetAccessorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.fullSetAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFullSetAccessor([NotNull] RaccoonLangParser.FullSetAccessorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.fullSetAccessor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFullSetAccessor([NotNull] RaccoonLangParser.FullSetAccessorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.accessorBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessorBody([NotNull] RaccoonLangParser.AccessorBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.accessorBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessorBody([NotNull] RaccoonLangParser.AccessorBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.classMethodOrFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassMethodOrFunction([NotNull] RaccoonLangParser.ClassMethodOrFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.classMethodOrFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassMethodOrFunction([NotNull] RaccoonLangParser.ClassMethodOrFunctionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.dataClassDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDataClassDeclaration([NotNull] RaccoonLangParser.DataClassDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.dataClassDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDataClassDeclaration([NotNull] RaccoonLangParser.DataClassDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.dataClassBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDataClassBody([NotNull] RaccoonLangParser.DataClassBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.dataClassBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDataClassBody([NotNull] RaccoonLangParser.DataClassBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.fqtn"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFqtn([NotNull] RaccoonLangParser.FqtnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.fqtn"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFqtn([NotNull] RaccoonLangParser.FqtnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.fqtnPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFqtnPart([NotNull] RaccoonLangParser.FqtnPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.fqtnPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFqtnPart([NotNull] RaccoonLangParser.FqtnPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.fqtnGenericPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFqtnGenericPart([NotNull] RaccoonLangParser.FqtnGenericPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.fqtnGenericPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFqtnGenericPart([NotNull] RaccoonLangParser.FqtnGenericPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeName([NotNull] RaccoonLangParser.TypeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.typeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeName([NotNull] RaccoonLangParser.TypeNameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.genericPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGenericPart([NotNull] RaccoonLangParser.GenericPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.genericPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGenericPart([NotNull] RaccoonLangParser.GenericPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] RaccoonLangParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] RaccoonLangParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] RaccoonLangParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] RaccoonLangParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.mutChangeStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMutChangeStatement([NotNull] RaccoonLangParser.MutChangeStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.mutChangeStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMutChangeStatement([NotNull] RaccoonLangParser.MutChangeStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.varialeDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarialeDeclarationStatement([NotNull] RaccoonLangParser.VarialeDeclarationStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.varialeDeclarationStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarialeDeclarationStatement([NotNull] RaccoonLangParser.VarialeDeclarationStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.varialeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarialeDeclaration([NotNull] RaccoonLangParser.VarialeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.varialeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarialeDeclaration([NotNull] RaccoonLangParser.VarialeDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.loopStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopStatement([NotNull] RaccoonLangParser.LoopStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.loopStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopStatement([NotNull] RaccoonLangParser.LoopStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.whileLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileLoop([NotNull] RaccoonLangParser.WhileLoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.whileLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileLoop([NotNull] RaccoonLangParser.WhileLoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.foreachLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeachLoop([NotNull] RaccoonLangParser.ForeachLoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.foreachLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeachLoop([NotNull] RaccoonLangParser.ForeachLoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.forLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForLoop([NotNull] RaccoonLangParser.ForLoopContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.forLoop"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForLoop([NotNull] RaccoonLangParser.ForLoopContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionStatement([NotNull] RaccoonLangParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.expressionStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionStatement([NotNull] RaccoonLangParser.ExpressionStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] RaccoonLangParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] RaccoonLangParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.nullCoalescingExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNullCoalescingExpression([NotNull] RaccoonLangParser.NullCoalescingExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.nullCoalescingExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNullCoalescingExpression([NotNull] RaccoonLangParser.NullCoalescingExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.condOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondOrExpression([NotNull] RaccoonLangParser.CondOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.condOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondOrExpression([NotNull] RaccoonLangParser.CondOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.condAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCondAndExpression([NotNull] RaccoonLangParser.CondAndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.condAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCondAndExpression([NotNull] RaccoonLangParser.CondAndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.boolOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolOrExpression([NotNull] RaccoonLangParser.BoolOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.boolOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolOrExpression([NotNull] RaccoonLangParser.BoolOrExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.boolXorExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolXorExpression([NotNull] RaccoonLangParser.BoolXorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.boolXorExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolXorExpression([NotNull] RaccoonLangParser.BoolXorExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.boolAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolAndExpression([NotNull] RaccoonLangParser.BoolAndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.boolAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolAndExpression([NotNull] RaccoonLangParser.BoolAndExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.equalityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEqualityExpression([NotNull] RaccoonLangParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.equalityExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEqualityExpression([NotNull] RaccoonLangParser.EqualityExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpression([NotNull] RaccoonLangParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpression([NotNull] RaccoonLangParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.shiftExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShiftExpression([NotNull] RaccoonLangParser.ShiftExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.shiftExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShiftExpression([NotNull] RaccoonLangParser.ShiftExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.additiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpression([NotNull] RaccoonLangParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.additiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpression([NotNull] RaccoonLangParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.multiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpression([NotNull] RaccoonLangParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.multiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpression([NotNull] RaccoonLangParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.rangeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRangeExpression([NotNull] RaccoonLangParser.RangeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.rangeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRangeExpression([NotNull] RaccoonLangParser.RangeExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpression([NotNull] RaccoonLangParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpression([NotNull] RaccoonLangParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.accessorExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessorExpression([NotNull] RaccoonLangParser.AccessorExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.accessorExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessorExpression([NotNull] RaccoonLangParser.AccessorExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.indexerExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexerExpression([NotNull] RaccoonLangParser.IndexerExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.indexerExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexerExpression([NotNull] RaccoonLangParser.IndexerExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm([NotNull] RaccoonLangParser.TermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.term"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm([NotNull] RaccoonLangParser.TermContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.methodCallExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodCallExpression([NotNull] RaccoonLangParser.MethodCallExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.methodCallExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodCallExpression([NotNull] RaccoonLangParser.MethodCallExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.postExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPostExpression([NotNull] RaccoonLangParser.PostExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.postExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPostExpression([NotNull] RaccoonLangParser.PostExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.parExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParExpression([NotNull] RaccoonLangParser.ParExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.parExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParExpression([NotNull] RaccoonLangParser.ParExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.ifExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfExpression([NotNull] RaccoonLangParser.IfExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.ifExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfExpression([NotNull] RaccoonLangParser.IfExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.elifPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElifPart([NotNull] RaccoonLangParser.ElifPartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.elifPart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElifPart([NotNull] RaccoonLangParser.ElifPartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.elsePart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElsePart([NotNull] RaccoonLangParser.ElsePartContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.elsePart"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElsePart([NotNull] RaccoonLangParser.ElsePartContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.newExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewExpression([NotNull] RaccoonLangParser.NewExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.newExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewExpression([NotNull] RaccoonLangParser.NewExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] RaccoonLangParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] RaccoonLangParser.LiteralContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.blockExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockExpression([NotNull] RaccoonLangParser.BlockExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.blockExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockExpression([NotNull] RaccoonLangParser.BlockExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpressionList([NotNull] RaccoonLangParser.ExpressionListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.expressionList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpressionList([NotNull] RaccoonLangParser.ExpressionListContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.identifierListComma"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierListComma([NotNull] RaccoonLangParser.IdentifierListCommaContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.identifierListComma"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierListComma([NotNull] RaccoonLangParser.IdentifierListCommaContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="RaccoonLangParser.identifierListDot"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierListDot([NotNull] RaccoonLangParser.IdentifierListDotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="RaccoonLangParser.identifierListDot"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierListDot([NotNull] RaccoonLangParser.IdentifierListDotContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
