//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:/Users/jbaehr/Source/Rcl/Rcl.Compiler\RaccoonLang.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="RaccoonLangParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IRaccoonLangVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompilationUnit([NotNull] RaccoonLangParser.CompilationUnitContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitImportStatement([NotNull] RaccoonLangParser.ImportStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.namespaceImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespaceImport([NotNull] RaccoonLangParser.NamespaceImportContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.aliasImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAliasImport([NotNull] RaccoonLangParser.AliasImportContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.groupImport"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupImport([NotNull] RaccoonLangParser.GroupImportContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.groupImportItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupImportItem([NotNull] RaccoonLangParser.GroupImportItemContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.groupImportItemList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGroupImportItemList([NotNull] RaccoonLangParser.GroupImportItemListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.namespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNamespace([NotNull] RaccoonLangParser.NamespaceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.typeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeDeclaration([NotNull] RaccoonLangParser.TypeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] RaccoonLangParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.parameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameters([NotNull] RaccoonLangParser.ParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] RaccoonLangParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBody([NotNull] RaccoonLangParser.FunctionBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.functionBlockBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionBlockBody([NotNull] RaccoonLangParser.FunctionBlockBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.functionLambdaBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionLambdaBody([NotNull] RaccoonLangParser.FunctionLambdaBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.interfaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceDeclaration([NotNull] RaccoonLangParser.InterfaceDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.interfaceParents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceParents([NotNull] RaccoonLangParser.InterfaceParentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.interfaceBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceBody([NotNull] RaccoonLangParser.InterfaceBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.interfaceMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceMember([NotNull] RaccoonLangParser.InterfaceMemberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.interfaceMethodOrFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceMethodOrFunction([NotNull] RaccoonLangParser.InterfaceMethodOrFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.interfaceMethodParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceMethodParameters([NotNull] RaccoonLangParser.InterfaceMethodParametersContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.interfaceProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaceProperty([NotNull] RaccoonLangParser.InterfacePropertyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.interfacePropertyAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfacePropertyAccessors([NotNull] RaccoonLangParser.InterfacePropertyAccessorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.getAndSetAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGetAndSetAccessors([NotNull] RaccoonLangParser.GetAndSetAccessorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.getOnlyAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGetOnlyAccessor([NotNull] RaccoonLangParser.GetOnlyAccessorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.setOnlyAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSetOnlyAccessor([NotNull] RaccoonLangParser.SetOnlyAccessorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.autoAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAutoAccessors([NotNull] RaccoonLangParser.AutoAccessorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassDeclaration([NotNull] RaccoonLangParser.ClassDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.classParents"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassParents([NotNull] RaccoonLangParser.ClassParentsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.interfaces"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInterfaces([NotNull] RaccoonLangParser.InterfacesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.baseClass"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBaseClass([NotNull] RaccoonLangParser.BaseClassContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassBody([NotNull] RaccoonLangParser.ClassBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.classMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassMember([NotNull] RaccoonLangParser.ClassMemberContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.ctor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCtor([NotNull] RaccoonLangParser.CtorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.ctorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCtorBody([NotNull] RaccoonLangParser.CtorBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.shortCtorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShortCtorBody([NotNull] RaccoonLangParser.ShortCtorBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.longCtorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLongCtorBody([NotNull] RaccoonLangParser.LongCtorBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.otherCtorCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitOtherCtorCall([NotNull] RaccoonLangParser.OtherCtorCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.classProperty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassProperty([NotNull] RaccoonLangParser.ClassPropertyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.initializer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInitializer([NotNull] RaccoonLangParser.InitializerContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.classPropertyAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassPropertyAccessors([NotNull] RaccoonLangParser.ClassPropertyAccessorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.classPropertyFullAccessors"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassPropertyFullAccessors([NotNull] RaccoonLangParser.ClassPropertyFullAccessorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.fullGetAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFullGetAccessor([NotNull] RaccoonLangParser.FullGetAccessorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.fullSetAccessor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFullSetAccessor([NotNull] RaccoonLangParser.FullSetAccessorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.accessorBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessorBody([NotNull] RaccoonLangParser.AccessorBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.classMethodOrFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitClassMethodOrFunction([NotNull] RaccoonLangParser.ClassMethodOrFunctionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.dataClassDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDataClassDeclaration([NotNull] RaccoonLangParser.DataClassDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.dataClassBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDataClassBody([NotNull] RaccoonLangParser.DataClassBodyContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.fqtn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFqtn([NotNull] RaccoonLangParser.FqtnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.fqtnPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFqtnPart([NotNull] RaccoonLangParser.FqtnPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.fqtnGenericPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFqtnGenericPart([NotNull] RaccoonLangParser.FqtnGenericPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.typeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeName([NotNull] RaccoonLangParser.TypeNameContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.genericPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGenericPart([NotNull] RaccoonLangParser.GenericPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] RaccoonLangParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] RaccoonLangParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.mutChangeStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMutChangeStatement([NotNull] RaccoonLangParser.MutChangeStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.variableDeclarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationStatement([NotNull] RaccoonLangParser.VariableDeclarationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] RaccoonLangParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLoopStatement([NotNull] RaccoonLangParser.LoopStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.whileLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileLoop([NotNull] RaccoonLangParser.WhileLoopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.foreachLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForeachLoop([NotNull] RaccoonLangParser.ForeachLoopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.forLoop"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForLoop([NotNull] RaccoonLangParser.ForLoopContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] RaccoonLangParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] RaccoonLangParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.nullCoalescingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNullCoalescingExpression([NotNull] RaccoonLangParser.NullCoalescingExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.condOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondOrExpression([NotNull] RaccoonLangParser.CondOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.condAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondAndExpression([NotNull] RaccoonLangParser.CondAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.boolOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolOrExpression([NotNull] RaccoonLangParser.BoolOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.boolXorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolXorExpression([NotNull] RaccoonLangParser.BoolXorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.boolAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolAndExpression([NotNull] RaccoonLangParser.BoolAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEqualityExpression([NotNull] RaccoonLangParser.EqualityExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpression([NotNull] RaccoonLangParser.RelationalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.shiftExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitShiftExpression([NotNull] RaccoonLangParser.ShiftExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] RaccoonLangParser.AdditiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] RaccoonLangParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.rangeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRangeExpression([NotNull] RaccoonLangParser.RangeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryExpression([NotNull] RaccoonLangParser.UnaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.accessorExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAccessorExpression([NotNull] RaccoonLangParser.AccessorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.indexerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIndexerExpression([NotNull] RaccoonLangParser.IndexerExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.term"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTerm([NotNull] RaccoonLangParser.TermContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.functionCallExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpression([NotNull] RaccoonLangParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.postExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostExpression([NotNull] RaccoonLangParser.PostExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.parExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParExpression([NotNull] RaccoonLangParser.ParExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.ifExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfExpression([NotNull] RaccoonLangParser.IfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.elifPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElifPart([NotNull] RaccoonLangParser.ElifPartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.elsePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElsePart([NotNull] RaccoonLangParser.ElsePartContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.newExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNewExpression([NotNull] RaccoonLangParser.NewExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] RaccoonLangParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.blockExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockExpression([NotNull] RaccoonLangParser.BlockExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionList([NotNull] RaccoonLangParser.ExpressionListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.identifierListComma"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierListComma([NotNull] RaccoonLangParser.IdentifierListCommaContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="RaccoonLangParser.identifierListDot"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierListDot([NotNull] RaccoonLangParser.IdentifierListDotContext context);
}
